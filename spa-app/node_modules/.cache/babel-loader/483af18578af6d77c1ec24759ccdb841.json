{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jpheo\\\\source\\\\repos\\\\jp-react\\\\spa-app\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deletePost as _deletePost } from '../actions/postAction';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function () {\n      _this.props.deletePost(_this.props.post.id);\n      /** use the history object to redirect to the home page after the post is deleted so you are not on a blank page.**/\n\n\n      _this.props.history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post ? React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.post.body), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn grey\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Delete Post\"))) : React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading post\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, post);\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  var id = ownProps.match.params.post_id;\n  return {\n    post: state.posts.find(function (post) {\n      return post.id === id;\n    })\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deletePost: function deletePost(id) {\n      dispatch(_deletePost(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","map":{"version":3,"sources":["C:\\Users\\jpheo\\source\\repos\\jp-react\\spa-app\\src\\components\\Post.js"],"names":["React","Component","connect","deletePost","Post","handleClick","props","post","id","history","push","title","body","mapStateToProps","state","ownProps","match","params","post_id","posts","find","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,uBAA3B;;IAEMC,I;;;;;;;;;;;;;;;;;;UAEFC,W,GAAc,YAAM;AAChB,YAAKC,KAAL,CAAWH,UAAX,CAAsB,MAAKG,KAAL,CAAWC,IAAX,CAAgBC,EAAtC;AACA;;;AACA,YAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,K;;;;;;;6BAEO;AACJ,UAAMH,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,GACT;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKD,KAAL,CAAWC,IAAX,CAAgBI,KAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,IAApB,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,KAAKP,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAHJ,CADS,GAWT;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAcA,aACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,IADL,CADA;AAKH;;;;EA5BcN,S;;AA+BnB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,MAAIP,EAAE,GAAGO,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,OAA/B;AACA,SAAO;AACHX,IAAAA,IAAI,EAAEO,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAiB,UAAAb,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB;AAAA,KAArB;AADH,GAAP;AAGH,CALD;;AAOA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO;AACHnB,IAAAA,UAAU,EAAE,oBAACK,EAAD,EAAQ;AAAEc,MAAAA,QAAQ,CAACnB,WAAU,CAACK,EAAD,CAAX,CAAR;AAAyB;AAD5C,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACW,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deletePost } from '../actions/postAction';\r\n\r\nclass Post extends Component{\r\n\r\n    handleClick = () => {\r\n        this.props.deletePost(this.props.post.id)\r\n        /** use the history object to redirect to the home page after the post is deleted so you are not on a blank page.**/\r\n        this.props.history.push('/')\r\n    }\r\n    \r\n    render(){\r\n        const post = this.props.post ? (\r\n            <div className='post'>\r\n                <h4 className='center'>{this.props.post.title}</h4>\r\n                <p>{this.props.post.body}</p>\r\n                <div className=\"center\">\r\n                    <button className=\"btn grey\" onClick={this.handleClick}>Delete Post</button>\r\n                </div>\r\n\r\n            </div>\r\n        ) : \r\n        (\r\n            <div className='center'>Loading post</div>\r\n            )\r\n\r\n        return(\r\n        <div className=\"container\">\r\n            {post}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.match.params.post_id;\r\n    return {\r\n        post: state.posts.find(post => post.id === id)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deletePost: (id) => { dispatch(deletePost(id))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);"]},"metadata":{},"sourceType":"module"}